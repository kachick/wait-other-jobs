name: 'wait-other-jobs'
description: 'Waits for all or specific other jobs, even if they are defined in other workflows'
author: 'Kenichi Kamiya <kachick1@gmail.com>'
branding:
  icon: 'check-circle'
  color: 'green'
inputs:
  github-token:
    description: 'The GITHUB_TOKEN secret'
    required: false
    default: '${{ github.token }}'
  github-api-url:
    description: 'Github API URL'
    required: true
    default: '${{ github.api_url }}'
  warmup-delay:
    description: |
      Wait this time before first polling.
      To make sure other jobs are running and can be targeted.
      Should be specified with ISO 8601 duration format.
    required: false
    # TODO: Since v4.x, Consider setting shorter or 0. Or respect the `minimum-interval` if this value is empty. See GH-596 and GH-994
    #   Pros: WIll be fast for `equal_intervals`.
    #   Cons:
    #     - If other jobs runs after this job, this job might not know them
    #     - If using `exponential_backoff`, reducing the polling count much reduces total time even if waiting longer for first polling
    default: 'PT10S'
  wait-seconds-before-first-polling: # TODO: Remove since v4.x
    deprecationMessage: This option will be removed in next major release. Use warmup-delay instead
    description: 'Wait this seconds before first polling'
    required: false
  minimum-interval:
    description: |
      Wait this interval or longer for each polling to reduce GitHub API calls.
      Should be specified with ISO 8601 duration format.
    required: false
    default: 'PT15S'
  min-interval-seconds: # TODO: Remove since v4.x
    deprecationMessage: This option will be removed in next major release. Use minimum-interval instead
    description: 'Wait this interval or the multiplied value (and jitter)'
    required: false
  early-exit:
    description: 'Stop rest pollings if faced at least 1 bad condition'
    required: false
    default: 'true'
  retry-method:
    description: 'How to wait for next polling'
    required: false
    default: 'equal_intervals' # Changed the default from `exponential_backoff` since GH-596(v2)
  attempt-limits:
    description: 'Stop rest pollings if reached to this limit'
    required: false
    default: '1000' # Enough large
  wait-list:
    description: 'Wait only these jobs'
    required: false
    default: '[]'
  skip-list:
    description: 'Wait except these jobs'
    required: false
    default: '[]'
  skip-same-workflow:
    description: 'Skip jobs defined in the same workflow which using this action'
    required: false
    default: 'false'
  dry-run:
    description: 'Avoid http requests for tests'
    required: false
    default: 'false'
outputs:
  parameters:
    description: |
      Parsed values from `with` and some context.
      This data is only provided for testing, so the schema is not defined.
  dump:
    description: |
      A file path for collected resources which keeps fields than logged.
      This data is only provided for debugging, so the schema is not defined.

runs:
  using: 'node20'
  main: 'dist/index.js'
