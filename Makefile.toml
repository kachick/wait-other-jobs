[config]
skip_core_tasks = true

[tasks.setup]
category = "Tools"
description = "Install dependencies after nix"
script = [
  "pnpm install --frozen-lockfile",
]

[tasks.fmt]
category = "Tools"
description = "Run formatters with changes"
script = [
  "dprint fmt",
  "yamlfmt .",
  "git ls-files '*.nix' | xargs nix fmt",
]

[tasks.lint]
category = "Tools"
description = "Run linters without changes"
script = [
  "dprint check",
  "yamlfmt -lint .",
  "deno lint",
  "typos . .github .vscode",
  "gitleaks detect",
  "git ls-files '*.nix' | xargs nixfmt --check",
]

[tasks.test]
category = "Tools"
description = 'Test'
script = [
  "pnpm run test",
]

[tasks.typecheck]
category = "Tools"
description = 'Correctness in TypeScript'
script = [
  "pnpm run typecheck",
]

[tasks.build]
category = "Tools"
description = 'Build that actually run in production'
script = [
  "pnpm run build",
]

[tasks.check]
category = "Tools"
description = 'Parallel runner for all tests and linters'
run_task = { name = ["typecheck", "test", "lint", "build"], parallel = true }

[tasks.help]
category = "Tools"
description = 'Might help you - (This one)'
script = [
  'makers --list-category-steps Tools',
]

[tasks.deps]
category = "Tools"
description = 'Print dependency and the versions'
script = [
  "node --version",
  "pnpm --version",
  "nix --version",
  "deno --version",
  "makers --version",
  "dprint --version",
  "yamlfmt -version",
  "nixfmt --version",
  "typos --version",
  "gh --version",
  "jq --version",
  "jnv --version",
  "pinact --version",
  "gitleaks version",
]

[tasks.check_no_git_diff]
category = "Tools"
description = 'This prevents unexpected commit'
script = [
  '(git add --intent-to-add . && git diff --exit-code) || (echo "You should commit all diff before running tests"; exit 1)',
]
