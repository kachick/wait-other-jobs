[config]
skip_core_tasks = true

[tasks.setup]
category = "Tools"
description = "Install dependencies after nix"
script = [
  "npm ci --ignore-scripts",
]

[tasks.format-check]
category = "Tools"
description = "Run formatters without changes"
script = [
  "dprint check",
]

[tasks.format-apply]
category = "Tools"
description = "Run formatters with changes"
script = [
  "dprint fmt",
  "typos . .github .vscode .devcontainer --write-changes",
]

[tasks.typos-check]
category = "Tools"
description = "Run formatters without changes"
script = [
  "typos . .github .vscode .devcontainer",
]

[tasks.fmt]
alias = "format-apply"

[tasks.lint-apply]
category = "Tools"
description = "Run linters with changes"
dependencies = [
  # Do not run parallel, because of dprint is superfast and eslint is slow. So sequential makes useful here.
  "format-apply",
]
script = [
  "npm run lint:fix",
]

[tasks.lint-check]
category = "Tools"
description = "Run linters without changes"
dependencies = [
  # Do not run parallel, because of dprint is superfast and eslint is slow. So sequential makes useful here.
  "format-check",
]
script = [
  "actionlint",
  "hadolint .devcontainer/Dockerfile",
  "npm run lint:check",
]

[tasks.lint]
alias = "lint-check"

[tasks.test-ts]
category = "Tools"
description = 'Test typescripts'
script = [
  "npm run test:ts",
]

[tasks.test-js]
category = "Tools"
description = 'Test actual env handling'
script = [
  "npm run test:js",
]

[tasks.typecheck]
category = "Tools"
description = 'Correctness in TypeScript'
script = [
  "npm run typecheck",
]

[tasks.check]
category = "Tools"
description = 'Parallel runner for all tests and linters'
run_task = { name = ["typos-check", "typecheck", "test-ts", "test-js", "lint-check"], parallel = true }

[tasks.docker-build]
category = "Tools"
description = 'Build docker image for devcontainer'
script = [
  "./.devcontainer/docker_build.bash",
]

[tasks.docker-shell]
category = "Tools"
description = 'Login to built container'
script = [
  "./.devcontainer/docker_shell.bash",
]

[tasks.help]
category = "Tools"
description = 'Might help you - (This one)'
script = [
  'makers --list-category-steps Tools',
]

[tasks.deps]
category = "Tools"
description = 'Print dependency and the versions'
script = [
  "node --version",
  "nix --version",
  "makers --version",
  "dprint --version",
  # Returns NON 0, why...? :<
  # "nixpkgs-fmt --version",
  "actionlint --version",
  "hadolint --version",
  "typos --version",
]

[tasks.check_no_git_diff]
category = "Tools"
description = 'This prevents unexpected commit'
script = [
  '(git add --intent-to-add . && git diff --exit-code) || (echo "You should commit all diff before running tests"; exit 1)',
]
